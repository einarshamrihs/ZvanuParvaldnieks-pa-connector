{
  "swagger": "2.0",
  "info": {
    "title": "Zvanu parvaldnieks",
    "description": "Zvanu Parvaldnieks is a mobile virtual PBX service for LMT mobile subscribers.",
    "version": "1.0",
    "contact": {
      "name": "Latvijas Mobilais Telefons",
      "url": "https://zvanuparvaldnieks.lmt.lv",
      "email": "tehn.atbalsts@lmt.lv"
    }
  },
  "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://zvanuparvaldnieks.lmt.lv"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://www.lmt.lv/en/data-processing"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Communication;IT Operations"
      }
  ],
  "host": "zvanuparvaldnieks.lmt.lv",
  "basePath": "/api/v2/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/webhooks": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload about the call when event CallstartedEvent is received during the start of the call.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "callID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "callID"
                },
                "caller": {
                  "type": "string",
                  "description": "caller"
                },
                "destination": {
                  "type": "string",
                  "description": "destination"
                },
                "direction": {
                  "type": "string",
                  "description": "direction"
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "status"
                },
                "callStarted": {
                  "type": "string",
                  "description": "callStarted"
                },
                "contactID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "contactID"
                }
              },
              "description": "data"
            }
          }
        }
      }
    },
    "/contacts": {},
    "/contacts/{contact_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "current_callerid": {
                      "type": "string",
                      "description": "current_callerid"
                    },
                    "archived": {
                      "type": "integer",
                      "format": "int32",
                      "description": "archived"
                    },
                    "firstname": {
                      "type": "string",
                      "description": "firstname"
                    },
                    "lastname": {
                      "type": "string",
                      "description": "lastname"
                    },
                    "created": {
                      "type": "string",
                      "description": "created"
                    },
                    "number": {
                      "type": "string",
                      "description": "number"
                    },
                    "contactID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "contactID"
                    },
                    "group_membership": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created": {
                            "type": "string",
                            "description": "created"
                          },
                          "groupID": {
                            "type": "integer",
                            "format": "int32",
                            "description": "groupID"
                          },
                          "type": {
                            "type": "integer",
                            "format": "int32",
                            "description": "type"
                          },
                          "name": {
                            "type": "string",
                            "description": "name"
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "contactID": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "contactID"
                                }
                              }
                            },
                            "description": "members"
                          }
                        }
                      },
                      "description": "group_membership"
                    },
                    "avatar": {
                      "type": "string",
                      "description": "avatar"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Contacts by ID",
        "description": "Retreive a single employee object by providing an ID.",
        "operationId": "GetContactsByID",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Unique ID of the employee.",
            "x-ms-summary": "Unique ID of the employee",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/groups/{group_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "created": {
                        "type": "string",
                        "description": "created"
                      },
                      "groupID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "groupID"
                      },
                      "type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contactID": {
                              "type": "integer",
                              "format": "int32",
                              "description": "contactID"
                            }
                          }
                        },
                        "description": "members"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Group By ID",
        "description": "Retreive a single employee group object by providing an ID.",
        "operationId": "GetGroupByID",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Unique ID of the employee group",
            "x-ms-summary": "Unique ID of the employee group",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/groups": {},
    "/call_records/{record_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "recordingID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "recordingID"
                    },
                    "callID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "callID"
                    },
                    "caller": {
                      "type": "string",
                      "description": "caller"
                    },
                    "destination": {
                      "type": "string",
                      "description": "destination"
                    },
                    "direction": {
                      "type": "string",
                      "description": "direction"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "description": "status"
                    },
                    "callStarted": {
                      "type": "string",
                      "description": "callStarted"
                    },
                    "callConnected": {
                      "type": "string",
                      "description": "callConnected"
                    },
                    "callEnded": {
                      "type": "string",
                      "description": "callEnded"
                    },
                    "contactID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "contactID"
                    },
                    "recordingURL": {
                      "type": "string",
                      "description": "recordingURL"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Call Recording by ID",
        "description": "Retreive a single call recording by providing an ID.",
        "operationId": "GetCallRecordingByID",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Unique ID of the recording",
            "x-ms-summary": "Unique ID of the recording",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/trigger/call_records": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recordingID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "recordingID"
                      },
                      "callID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "callID"
                      },
                      "caller": {
                        "type": "string",
                        "description": "caller"
                      },
                      "destination": {
                        "type": "string",
                        "description": "destination"
                      },
                      "direction": {
                        "type": "string",
                        "description": "direction"
                      },
                      "status": {
                        "type": "integer",
                        "format": "int32",
                        "description": "status"
                      },
                      "callStarted": {
                        "type": "string",
                        "description": "callStarted"
                      },
                      "callConnected": {
                        "type": "string",
                        "description": "callConnected"
                      },
                      "callEnded": {
                        "type": "string",
                        "description": "callEnded"
                      },
                      "contactID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "contactID"
                      },
                      "recordingURL": {
                        "type": "string",
                        "description": "recordingURL"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Call Recordings",
        "description": "Retreive Call recordings. Additionaly API consumer may filter the returned records based on specific number or employee involved in the call (source, destination or contact_id), as well as direction to filter out only incoming or outgoing calls or only calls made in specified date range (date_range).",
        "operationId": "GetCallRecordings",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "record_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the recording.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Unique ID of the recording"
          },
          {
            "name": "initial_record_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Initial record ID for querying only newly created records.",
            "x-ms-summary": "Initial record ID for querying only newly created records"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Limit how many results to retrieve.",
            "x-ms-summary": "Limit how many results to retrieve"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Used to specify from which result we want the data to retrieve.",
            "x-ms-summary": "Used to specify from which result we want the data to retrieve"
          },
          {
            "name": "destination",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number which call was placed to.",
            "x-ms-visibility": "important",
            "x-ms-summary": "The number which call was placed to"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of calling party.",
            "x-ms-visibility": "important",
            "x-ms-summary": "The number of calling party"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "\"in\" or \"out\" to indicate if the call was incoming or outgoing.",
            "x-ms-visibility": "important",
            "x-ms-summary": "\"in\" or \"out\" to indicate if the call was incoming or outgoing"
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the Employee involved in the call.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Unique ID of the Employee involved in the call"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Starting date in the filtered date range.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Starting date in the filtered date range"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "End date in the filtered date range.",
            "x-ms-summary": "End date in the filtered date range"
          }
        ],
        "x-ms-trigger-hint": "Triggers when new call recording is created",
        "x-ms-visibility": "important"
      }
    },
    "/trigger/call_history": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "callID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "callID"
                      },
                      "caller": {
                        "type": "string",
                        "description": "caller"
                      },
                      "destination": {
                        "type": "string",
                        "description": "destination"
                      },
                      "direction": {
                        "type": "string",
                        "description": "direction"
                      },
                      "status": {
                        "type": "integer",
                        "format": "int32",
                        "description": "status"
                      },
                      "callStarted": {
                        "type": "string",
                        "description": "callStarted"
                      },
                      "callConnected": {
                        "type": "string",
                        "description": "callConnected"
                      },
                      "callEnded": {
                        "type": "string",
                        "description": "callEnded"
                      },
                      "connectionTime": {
                        "type": "integer",
                        "format": "int32",
                        "description": "connectionTime"
                      },
                      "contactID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "contactID"
                      },
                      "recordingID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "recordingID"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get call History",
        "description": "Retreive Call history entries. Additionaly API consumer may filter the returned records based on specific number or employee involved in the call (source, destination or contact_id), as well as direction to filter out only incoming or outgoing calls or only calls made in specified date range (date_range).",
        "operationId": "GetCallHistory",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "call_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the call.",
            "x-ms-summary": "Unique ID of the call"
          },
          {
            "name": "initial_call_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Initial call ID for querying only newly created calls.",
            "x-ms-summary": "Initial call ID for querying only newly created calls"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Limit how many results to retrieve.",
            "x-ms-summary": "Limit how many results to retrieve"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Used to specify from which result we want the data to retrieve.",
            "x-ms-summary": "Used to specify from which result we want the data to retrieve"
          },
          {
            "name": "destination",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number which call was placed to.",
            "x-ms-visibility": "important",
            "x-ms-summary": "The number which call was placed to"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of calling party.",
            "x-ms-visibility": "important",
            "x-ms-summary": "The number of calling party"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "\"in\" or \"out\" to indicate if the call was incoming or outgoing.",
            "x-ms-visibility": "important",
            "x-ms-summary": "\"in\" or \"out\" to indicate if the call was incoming or outgoing"
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the Employee involved in the call.",
            "x-ms-summary": "Unique ID of the Employee involved in the call"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Starting date in the filtered date range.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Starting date in the filtered date range"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "End date in the filtered date range.",
            "x-ms-summary": "End date in the filtered date range"
          }
        ],
        "x-ms-trigger-hint": "Triggers when new call is registered.",
        "x-ms-visibility": "important"
      }
    },
    "/trigger/voicemail_boxes": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "clientID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "clientID"
                      },
                      "boxName": {
                        "type": "string",
                        "description": "boxName"
                      },
                      "created": {
                        "type": "string",
                        "description": "created"
                      },
                      "voicemailBoxID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "voicemailBoxID"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Voicemail Boxes",
        "description": "Retreive a list of created voicemail boxes.",
        "operationId": "GetVoicemailBoxes",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "box_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the voicemail box.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Unique ID of the voicemail box"
          },
          {
            "name": "initial_box_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Initial voicemail box ID for querying only newly created voicemail boxes.",
            "x-ms-summary": "Initial voicemail box ID for querying only newly created voicemail boxes"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Limit how many results to retrieve.",
            "x-ms-summary": "Limit how many results to retrieve"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Used to specify from which result we want the data to retrieve.",
            "x-ms-summary": "Used to specify from which result we want the data to retrieve"
          }
        ],
        "x-ms-trigger-hint": "Triggers when new voicemail box is created",
        "x-ms-visibility": "important"
      }
    },
    "/trigger/voicemails": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sender": {
                        "type": "string",
                        "description": "sender"
                      },
                      "voicemailID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "voicemailID"
                      },
                      "length": {
                        "type": "integer",
                        "format": "int32",
                        "description": "length"
                      },
                      "callStarted": {
                        "type": "string",
                        "description": "callStarted"
                      },
                      "voicemailBoxID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "voicemailBoxID"
                      },
                      "voicemailBoxName": {
                        "type": "string",
                        "description": "voicemailBoxName"
                      },
                      "messageURL": {
                        "type": "string",
                        "description": "messageURL"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get voicemails",
        "description": "Retreive Voicemail messages. Additionaly API consumer may filter the returned records based on contact_id, source, box_id or date_range to limit the result to only those messages that are left for specific employee, voicemail box, from specific number or in requested date range.",
        "operationId": "GetVoicemails",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "voicemail_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the voicemail message.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Unique ID of the voicemail message"
          },
          {
            "name": "initial_voicemail_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Initial voicemail ID for querying only newly created voicemails.",
            "x-ms-summary": "Initial voicemail ID for querying only newly created voicemails"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Limit how many results to retrieve.",
            "x-ms-summary": "Limit how many results to retrieve"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Used to specify from which result we want the data to retrieve.",
            "x-ms-summary": "Used to specify from which result we want the data to retrieve"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of calling party.",
            "x-ms-visibility": "important",
            "x-ms-summary": "The number of calling party"
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the Employee.",
            "x-ms-summary": "Unique ID of the Employee"
          },
          {
            "name": "box_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the voicemail box.",
            "x-ms-summary": "Unique ID of the voicemail box"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Starting date in the filtered date range.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Starting date in the filtered date range"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "End date in the filtered date range.",
            "x-ms-summary": "End date in the filtered date range"
          }
        ],
        "x-ms-trigger-hint": "Checks for new voicemail is created.",
        "x-ms-visibility": "important"
      }
    },
    "/trigger/audio_prompts": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "description": "Retreive audio prompt entries.",
        "summary": "Get Audio Prompts",
        "operationId": "GetAudioPrompts",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "prompt_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the audio prompt.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Unique ID of the audio prompt"
          },
          {
            "name": "initial_prompt_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Initial audio prompt ID for querying only newly created audio prompts.",
            "x-ms-summary": "Initial audio prompt ID for querying only newly created audio prompts"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Limit how many results to retrieve.",
            "x-ms-summary": "Limit how many results to retrieve"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Used to specify from which result we want the data to retrieve.",
            "x-ms-summary": "Used to specify from which result we want the data to retrieve"
          }
        ],
        "x-ms-trigger-hint": "Triggers when new audio prompt is created",
        "x-ms-visibility": "important"
      }
    },
    "/trigger/voip_endpoints": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "employee_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "employee_id"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Voip Endpoints",
        "description": "Retreive voip endpoint entries.",
        "operationId": "GetVoipEndpoints",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "endpoint_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the VOIP endpoint.",
            "x-ms-visibility": "important",
            "x-ms-summary": "Unique ID of the VOIP endpoint"
          },
          {
            "name": "initial_endpoint_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Initial VOIP endpoint ID for querying only newly created VOIP endpoints.",
            "x-ms-summary": "Initial VOIP endpoint ID for querying only newly created VOIP endpoints"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Limit how many results to retrieve.",
            "x-ms-summary": "Limit how many results to retrieve"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Used to specify from which result we want the data to retrieve.",
            "x-ms-summary": "Used to specify from which result we want the data to retrieve"
          }
        ],
        "x-ms-trigger-hint": "Triggers when new voip endpoint is created",
        "x-ms-visibility": "important"
      }
    },
    "/call_history/{call_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "callID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "callID"
                    },
                    "caller": {
                      "type": "string",
                      "description": "caller"
                    },
                    "destination": {
                      "type": "string",
                      "description": "destination"
                    },
                    "direction": {
                      "type": "string",
                      "description": "direction"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "description": "status"
                    },
                    "callStarted": {
                      "type": "string",
                      "description": "callStarted"
                    },
                    "callConnected": {
                      "type": "string",
                      "description": "callConnected"
                    },
                    "callEnded": {
                      "type": "string",
                      "description": "callEnded"
                    },
                    "connectionTime": {
                      "type": "integer",
                      "format": "int32",
                      "description": "connectionTime"
                    },
                    "contactID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "contactID"
                    },
                    "recordingID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "recordingID"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Call History Item By ID",
        "operationId": "GetCallHistoryItemByID",
        "description": "Retreive a single call history entry by providing an ID.",
        "parameters": [
          {
            "name": "call_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Unique ID of the call.",
            "x-ms-summary": "Unique ID of the call",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/voicemail_boxes/{box_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "clientID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "clientID"
                    },
                    "boxName": {
                      "type": "string",
                      "description": "boxName"
                    },
                    "created": {
                      "type": "string",
                      "description": "created"
                    },
                    "voicemailBoxID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "voicemailBoxID"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "description": "Retreive a single voicemail box object by providing an ID.",
        "summary": "Get Voicemail Box By ID",
        "operationId": "GetVoicemailBoxByID",
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Unique ID of the voicemail box.",
            "x-ms-summary": "Unique ID of the voicemail box",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/voicemails/{voicemail_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "sender": {
                      "type": "string",
                      "description": "sender"
                    },
                    "voicemailID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "voicemailID"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32",
                      "description": "length"
                    },
                    "callStarted": {
                      "type": "string",
                      "description": "callStarted"
                    },
                    "voicemailBoxID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "voicemailBoxID"
                    },
                    "voicemailBoxName": {
                      "type": "string",
                      "description": "voicemailBoxName"
                    },
                    "messageURL": {
                      "type": "string",
                      "description": "messageURL"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "description": "Retreive a single voicemail object by providing an ID.",
        "summary": "Get Voicemail By ID",
        "operationId": "GetVoicemailByID",
        "parameters": [
          {
            "name": "voicemail_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Unique ID of the voicemail.",
            "x-ms-summary": "Unique ID of the voicemail",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/audio_prompts/{prompt_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "type": {
                      "type": "integer",
                      "format": "int32",
                      "description": "type"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "description": "Retreive a single audio prompt object by providing an ID.",
        "summary": "Get Audio Prompt By ID",
        "operationId": "GetAudioPromptByID",
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Unique ID of the audio prompt.",
            "x-ms-summary": "Unique ID of the audio prompt",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/voip_endpoints/{endpoint_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "employee_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "employee_id"
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "description": "Retreive a single voip endpoint object by providing an ID.",
        "summary": "Get Voip Endpoint By ID",
        "operationId": "GetVoipEndpointByID",
        "parameters": [
          {
            "name": "endpoint_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Unique ID of the VOIP endpoint.",
            "x-ms-summary": "Unique ID of the VOIP endpoint",
            "x-ms-url-encoding": "single"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/dial": {
      "post": {
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Dial",
        "description": "Request the start of new call by sending a request to a device.",
        "operationId": "Dial",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destination": {
                  "type": "string",
                  "description": "Destination number.",
                  "title": "Destination",
                  "x-ms-visibility": "important"
                },
                "contactID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Unique ID of the employee",
                  "title": "contact ID",
                  "x-ms-visibility": "important"
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "contactID",
                "destination"
              ]
            },
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/webhooks/CallConnected": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload about the call when event CallConnectedEvent is received during a moment when call is answered.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "callID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "callID"
                },
                "caller": {
                  "type": "string",
                  "description": "caller"
                },
                "destination": {
                  "type": "string",
                  "description": "destination"
                },
                "direction": {
                  "type": "string",
                  "description": "direction"
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "status"
                },
                "callStarted": {
                  "type": "string",
                  "description": "callStarted"
                },
                "callConnected": {
                  "type": "string",
                  "description": "callConnected"
                },
                "contactID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "contactID"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "CallConnected webhook callback",
        "description": "Provides event with data payload about the call when event CallConnectedEvent is received during a moment when call is answered.",
        "operationId": "CallConnected",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/CallCompleted": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload about the call when event CallCompletedEvent is received during a moment when call has ended.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "callID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "callID"
                },
                "caller": {
                  "type": "string",
                  "description": "caller"
                },
                "destination": {
                  "type": "string",
                  "description": "destination"
                },
                "direction": {
                  "type": "string",
                  "description": "direction"
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "status"
                },
                "callStarted": {
                  "type": "string",
                  "description": "callStarted"
                },
                "callConnected": {
                  "type": "string",
                  "description": "callConnected"
                },
                "connectionTime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "connectionTime"
                },
                "contactID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "contactID"
                },
                "previous_contactID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "previous_contactID"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "CallCompleted webhook callback",
        "description": "Provides event with data payload about the call when event CallCompletedEvent is received during a moment when call has ended.",
        "operationId": "CallCompleted",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/VoicemailCreated": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload about the voicemail when event VoicemailMessageCreatedEvent is received during a moment when caller has left a voicemail.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "sender": {
                  "type": "string",
                  "description": "sender"
                },
                "voicemailID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "voicemailID"
                },
                "length": {
                  "type": "integer",
                  "format": "int32",
                  "description": "length"
                },
                "callStarted": {
                  "type": "string",
                  "description": "callStarted"
                },
                "voicemailBoxID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "voicemailBoxID"
                },
                "voicemailBoxName": {
                  "type": "string",
                  "description": "voicemailBoxName"
                },
                "messageURL": {
                  "type": "string",
                  "description": "messageURL"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "VoicemailCreated webhook callback",
        "description": "Provides event with data payload about the voicemail when event VoicemailCreated Event is received during a moment when caller has left a voicemail.",
        "operationId": "VoicemailCreated",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/VoicemailDeleted": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload about the voicemail when event VoicemailDeleted Event is received during a moment when user has deleted a voicemail message.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "sender": {
                  "type": "string",
                  "description": "sender"
                },
                "voicemailID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "voicemailID"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "VoicemailDeleted webhook callback",
        "description": "Provides event with data payload about the voicemail when event VoicemailMessageDeletedEvent is received during a moment when user has deleted a voicemail message.",
        "operationId": "VoicemailDeleted",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "required": [
                "endpoint"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/LostCallerAdded": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload data about the call when event LostCallerCreatedEvent is received during a moment when call does not get answered and gets registered as lost.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "contact_name": {
                  "type": "string",
                  "description": "contact_name"
                },
                "destination": {
                  "type": "string",
                  "description": "destination"
                },
                "attempts": {
                  "type": "integer",
                  "format": "int32",
                  "description": "attempts"
                },
                "callerid": {
                  "type": "string",
                  "description": "callerid"
                },
                "last_contact": {
                  "type": "string",
                  "description": "last_contact"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "LostCallerAdded webhook callback",
        "operationId": "LostCallerAdded",
        "description": "Provides event with data payload data about the call when event LostCallerCreatedEvent is received during a moment when call does not get answered and gets registered as lost.",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/LostCallerUpdated": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "contact_name": {
                  "type": "string",
                  "description": "contact_name"
                },
                "destination": {
                  "type": "string",
                  "description": "destination"
                },
                "attempts": {
                  "type": "integer",
                  "format": "int32",
                  "description": "attempts"
                },
                "callerid": {
                  "type": "string",
                  "description": "callerid"
                },
                "last_contact": {
                  "type": "string",
                  "description": "last_contact"
                }
              },
              "description": "data"
            }
          }
        },
        "description": "Provides event with data payload data about the call when event LostCallerUpdatedEvent is received during a moment when another unsuccesful call attempt is received from the same number, so lost call record attempts and last_contact fields get updated with a new number and timestamp."
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "LostCallerUpdated webhook callback",
        "description": "Provides event with data payload data about the call when event LostCallerUpdatedEvent is received during a moment when another unsuccesful call attempt is received from the same number, so lost call record attempts and last_contact fields get updated with a new number and timestamp.",
        "operationId": "LostCallerUpdated",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/LostCallerRemoved": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload about the call when event LostCallerDeletedEvent is received during a moment when lost call gets called back from employee or gets answered later in repeated call from the same caller.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "destination": {
                  "type": "string",
                  "description": "destination"
                },
                "callerid": {
                  "type": "string",
                  "description": "callerid"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "LostCallerRemoved webhook callback",
        "operationId": "LostCallerRemoved",
        "description": "Provides event with data payload about the call when event LostCallerDeletedEvent is received during a moment when lost call gets called back from employee or gets answered later in repeated call from the same caller.",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/CallRecorded": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload about the call when event CallRecorded is received during a moment when call recording gets created.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "recordingID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "recordingID"
                },
                "callID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "callID"
                },
                "callStarted": {
                  "type": "string",
                  "description": "callStarted"
                },
                "recordingURL": {
                  "type": "string",
                  "description": "recordingURL"
                },
                "direction": {
                  "type": "string",
                  "description": "direction"
                },
                "connectionTime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "connectionTime"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "CallRecorded webhook callback",
        "operationId": "CallRecorded",
        "description": "Provides event with data payload about the call when event CallRecorded is received during a moment when call recording gets created.",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/CallTransfered": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "callID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "callID"
                },
                "caller": {
                  "type": "string",
                  "description": "caller"
                },
                "destination": {
                  "type": "string",
                  "description": "destination"
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "status"
                },
                "callStarted": {
                  "type": "string",
                  "description": "callStarted"
                },
                "callConnected": {
                  "type": "string",
                  "description": "callConnected"
                },
                "connectionTime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "connectionTime"
                },
                "contactID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "contactID"
                },
                "previous_contactID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "previous_contactID"
                },
                "direction": {
                  "type": "string",
                  "description": "direction"
                }
              },
              "description": "data"
            }
          }
        },
        "description": "Provides event with data payload about the call when event CallTransfered is received during a moment when call gets transfered to a third party either by a blind transfer of attended transfer."
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "CallTransfered webhook callback",
        "operationId": "CallTransfered",
        "description": "Provides event with data payload about the call when event CallTransfered is received during a moment when call gets transfered to a third party either by a blind transfer of attended transfer.",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/{webhook_id}": {},
    "/webhooks/CallStarted": {
      "x-ms-notification-content": {
        "description": "Provides event with data payload about the call when event CallStarted event is received during the start of the call.",
        "schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "type"
            },
            "version": {
              "type": "string",
              "description": "version"
            },
            "eventType": {
              "type": "string",
              "description": "eventType"
            },
            "data": {
              "type": "object",
              "properties": {
                "callID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "callID"
                },
                "caller": {
                  "type": "string",
                  "description": "caller"
                },
                "destination": {
                  "type": "string",
                  "description": "destination"
                },
                "direction": {
                  "type": "string",
                  "description": "direction"
                },
                "status": {
                  "type": "integer",
                  "format": "int32",
                  "description": "status"
                },
                "callStarted": {
                  "type": "string",
                  "description": "callStarted"
                },
                "contactID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "contactID"
                }
              },
              "description": "data"
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "string",
                  "description": "data"
                }
              }
            }
          }
        },
        "consumes": ["application/json"],
        "summary": "CallStarted webhook callback",
        "description": "Provides event with data payload about the call when event CallStarted event is received during the start of the call.",
        "operationId": "CallStarted",
        "x-ms-visibility": "important",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string",
                  "description": "endpoint",
                  "title": "",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                }
              },
              "x-ms-visibility": "internal",
              "required": [
                "endpoint"
              ]
            },
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/trigger/groups": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "created": {
                        "type": "string",
                        "description": "created"
                      },
                      "groupID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "groupID"
                      },
                      "type": {
                        "type": "integer",
                        "format": "int32",
                        "description": "type"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contactID": {
                              "type": "integer",
                              "format": "int32",
                              "description": "contactID"
                            }
                          }
                        },
                        "description": "members"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Groups",
        "description": "Retreive Employee groups data. Additionaly API consumer may filter the returned records based on contact_id, to limit the result to only those groups, which have particular Employee as a member.",
        "operationId": "GetGroups",
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the group.",
            "x-ms-summary": "Unique ID of the group"
          },
          {
            "name": "initial_group_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Initial group ID for querying only newly created employee groups.",
            "x-ms-summary": "Initial group ID for querying only newly created employee groups"
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Unique ID of the Employee.",
            "x-ms-summary": "Unique ID of the Employee"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Limit how many results to retrieve.",
            "x-ms-summary": "Limit how many results to retrieve"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Used to specify from which result we want the data to retrieve.",
            "x-ms-summary": "Used to specify from which result we want the data to retrieve"
          }
        ],
        "x-ms-trigger-hint": "Triggers when new employee group is created"
      }
    },
    "/trigger/contacts": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "version"
                },
                "status": {
                  "type": "string",
                  "description": "status"
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "statusCode"
                },
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "current_callerid": {
                        "type": "string",
                        "description": "current_callerid"
                      },
                      "archived": {
                        "type": "integer",
                        "format": "int32",
                        "description": "archived"
                      },
                      "firstname": {
                        "type": "string",
                        "description": "firstname"
                      },
                      "lastname": {
                        "type": "string",
                        "description": "lastname"
                      },
                      "created": {
                        "type": "string",
                        "description": "created"
                      },
                      "number": {
                        "type": "string",
                        "description": "number"
                      },
                      "contactID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "contactID"
                      },
                      "group_membership": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "created": {
                              "type": "string",
                              "description": "created"
                            },
                            "groupID": {
                              "type": "integer",
                              "format": "int32",
                              "description": "groupID"
                            },
                            "type": {
                              "type": "integer",
                              "format": "int32",
                              "description": "type"
                            },
                            "name": {
                              "type": "string",
                              "description": "name"
                            },
                            "members": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "contactID": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "contactID"
                                  }
                                }
                              },
                              "description": "members"
                            }
                          }
                        },
                        "description": "group_membership"
                      },
                      "avatar": {
                        "type": "string",
                        "description": "avatar"
                      }
                    }
                  },
                  "description": "data"
                }
              }
            }
          }
        },
        "summary": "Get Contacts",
        "description": "Triggers when new employee is created",
        "operationId": "GetContacts",
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Limit how many results to retrieve.",
            "x-ms-summary": "Limit how many results to retrieve"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Used to specify from which result we want the data to retrieve.",
            "x-ms-summary": "Used to specify from which result we want the data to retrieve"
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Unique ID of the Employee.",
            "x-ms-summary": "Unique ID of the Employee"
          },
          {
            "name": "initial_contact_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "internal",
            "description": "Initial contact ID for querying only newly created employees.",
            "x-ms-summary": "Initial contact ID for querying only newly created employees"
          }
        ],
        "x-ms-trigger-hint": "Triggers when new employee is created"
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}